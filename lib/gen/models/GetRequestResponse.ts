/* tslint:disable */
/* eslint-disable */
/**
 * MVC
 * MVC Assignment
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Role } from './Role';
import { RoleFromJSON, RoleToJSON } from './Role';
import type { UserSeenStatus } from './UserSeenStatus';
import { UserSeenStatusFromJSON, UserSeenStatusToJSON } from './UserSeenStatus';
import type { RequestStatus } from './RequestStatus';
import { RequestStatusFromJSON, RequestStatusToJSON } from './RequestStatus';

/**
 *
 * @export
 * @interface GetRequestResponse
 */
export interface GetRequestResponse {
  /**
   *
   * @type {number}
   * @memberof GetRequestResponse
   */
  id?: number;
  /**
   *
   * @type {Role}
   * @memberof GetRequestResponse
   */
  role?: Role;
  /**
   *
   * @type {RequestStatus}
   * @memberof GetRequestResponse
   */
  status?: RequestStatus;
  /**
   *
   * @type {number}
   * @memberof GetRequestResponse
   */
  userId?: number;
  /**
   *
   * @type {UserSeenStatus}
   * @memberof GetRequestResponse
   */
  userStatus?: UserSeenStatus;
}

/**
 * Check if a given object implements the GetRequestResponse interface.
 */
export function instanceOfGetRequestResponse(value: object): value is GetRequestResponse {
  return true;
}

export function GetRequestResponseFromJSON(json: any): GetRequestResponse {
  return GetRequestResponseFromJSONTyped(json, false);
}

export function GetRequestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRequestResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    role: json['role'] == null ? undefined : RoleFromJSON(json['role']),
    status: json['status'] == null ? undefined : RequestStatusFromJSON(json['status']),
    userId: json['user_id'] == null ? undefined : json['user_id'],
    userStatus: json['user_status'] == null ? undefined : UserSeenStatusFromJSON(json['user_status'])
  };
}

export function GetRequestResponseToJSON(json: any): GetRequestResponse {
  return GetRequestResponseToJSONTyped(json, false);
}

export function GetRequestResponseToJSONTyped(
  value?: GetRequestResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    role: RoleToJSON(value['role']),
    status: RequestStatusToJSON(value['status']),
    user_id: value['userId'],
    user_status: UserSeenStatusToJSON(value['userStatus'])
  };
}
