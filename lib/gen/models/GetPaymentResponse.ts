/* tslint:disable */
/* eslint-disable */
/**
 * MVC
 * MVC Assignment
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentStatus } from './PaymentStatus';
import {
    PaymentStatusFromJSON,
    PaymentStatusFromJSONTyped,
    PaymentStatusToJSON,
    PaymentStatusToJSONTyped,
} from './PaymentStatus';

/**
 * 
 * @export
 * @interface GetPaymentResponse
 */
export interface GetPaymentResponse {
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    cashierId?: number;
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    orderId?: number;
    /**
     * 
     * @type {PaymentStatus}
     * @memberof GetPaymentResponse
     */
    status?: PaymentStatus;
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    subtotal?: number;
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    tip?: number;
    /**
     * 
     * @type {number}
     * @memberof GetPaymentResponse
     */
    total?: number;
}



/**
 * Check if a given object implements the GetPaymentResponse interface.
 */
export function instanceOfGetPaymentResponse(value: object): value is GetPaymentResponse {
    return true;
}

export function GetPaymentResponseFromJSON(json: any): GetPaymentResponse {
    return GetPaymentResponseFromJSONTyped(json, false);
}

export function GetPaymentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPaymentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'cashierId': json['cashier_id'] == null ? undefined : json['cashier_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'orderId': json['order_id'] == null ? undefined : json['order_id'],
        'status': json['status'] == null ? undefined : PaymentStatusFromJSON(json['status']),
        'subtotal': json['subtotal'] == null ? undefined : json['subtotal'],
        'tip': json['tip'] == null ? undefined : json['tip'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function GetPaymentResponseToJSON(json: any): GetPaymentResponse {
    return GetPaymentResponseToJSONTyped(json, false);
}

export function GetPaymentResponseToJSONTyped(value?: GetPaymentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cashier_id': value['cashierId'],
        'id': value['id'],
        'order_id': value['orderId'],
        'status': PaymentStatusToJSON(value['status']),
        'subtotal': value['subtotal'],
        'tip': value['tip'],
        'total': value['total'],
    };
}

